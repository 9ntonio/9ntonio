{"version":3,"file":"b9209e23ca9cdcfd6bd2bfa1c552ecade4562769-2306030fbc185defea22.js","mappings":"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","sources":["webpack://antonio-almena-portfolio/./src/components/Seo.js","webpack://antonio-almena-portfolio/./src/components/FontLoadingOptimizer.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\n/**\r\n * SEO component using Gatsby's Head API for proper SSR and hydration\r\n * This approach is more performant and follows React best practices\r\n */\r\nfunction Seo({ description = \"\", meta = [], Sitetitle = \"Antonio Almena\" }) {\r\n\tconst { site } = useStaticQuery(graphql`\r\n\t\tquery {\r\n\t\t\tsite {\r\n\t\t\t\tsiteMetadata {\r\n\t\t\t\t\ttitle\r\n\t\t\t\t\tdescription\r\n\t\t\t\t\tauthor\r\n\t\t\t\t\timage\r\n\t\t\t\t\tsiteUrl\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t`);\r\n\r\n\tconst metaDescription = description || site.siteMetadata?.description || \"\";\r\n\tconst siteTitle = site.siteMetadata?.title || \"Design Technologist\";\r\n\tconst siteUrl = site.siteMetadata?.siteUrl || \"\";\r\n\tconst imageSEO = site.siteMetadata?.image || \"/social.jpg\";\r\n\tconst author = site.siteMetadata?.author || \"@9ntonio\";\r\n\tconst fullTitle = `${Sitetitle} | ${siteTitle}`;\r\n\r\n\t// Memoize default meta tags to prevent recreation on every render\r\n\tconst defaultMeta = React.useMemo(() => [\r\n\t\t{ name: \"description\", content: metaDescription },\r\n\t\t{ name: \"keywords\", content: \"software development, engineering, AI, design systems, front end development, web development, design technology\" },\r\n\t\t{ name: \"robots\", content: \"index, follow\" },\r\n\t\t{ name: \"viewport\", content: \"width=device-width, initial-scale=1\" },\r\n\t\t{ property: \"og:type\", content: \"website\" },\r\n\t\t{ property: \"og:url\", content: siteUrl },\r\n\t\t{ property: \"og:title\", content: fullTitle },\r\n\t\t{ property: \"og:description\", content: metaDescription },\r\n\t\t{ property: \"og:image\", content: `${siteUrl}${imageSEO}` },\r\n\t\t{ name: \"twitter:card\", content: \"summary_large_image\" },\r\n\t\t{ name: \"twitter:creator\", content: author },\r\n\t\t{ name: \"twitter:title\", content: fullTitle },\r\n\t\t{ name: \"twitter:description\", content: metaDescription },\r\n\t\t{ name: \"twitter:image\", content: `${siteUrl}${imageSEO}` },\r\n\t].filter(tag => tag.content), [metaDescription, siteUrl, fullTitle, imageSEO, author]);\r\n\r\n\t// Merge and validate meta tags\r\n\tconst allMeta = React.useMemo(() => {\r\n\t\tconst userMeta = Array.isArray(meta) ? meta.filter(tag => tag?.content) : [];\r\n\t\treturn [...defaultMeta, ...userMeta];\r\n\t}, [defaultMeta, meta]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<title>{fullTitle}</title>\r\n\t\t\t<html lang=\"en\" />\r\n\t\t\t{allMeta.map((tag, index) => {\r\n\t\t\t\tif (!tag || !tag.content) return null;\r\n\r\n\t\t\t\tconst key = `${tag.name || tag.property}-${index}`;\r\n\r\n\t\t\t\tif (tag.name) {\r\n\t\t\t\t\treturn <meta key={key} name={tag.name} content={tag.content} />;\r\n\t\t\t\t} else if (tag.property) {\r\n\t\t\t\t\treturn <meta key={key} property={tag.property} content={tag.content} />;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn null;\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nSeo.propTypes = {\r\n\tdescription: PropTypes.string,\r\n\tmeta: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tname: PropTypes.string,\r\n\t\t\tcontent: PropTypes.string.isRequired,\r\n\t\t\tproperty: PropTypes.string,\r\n\t\t}),\r\n\t),\r\n\tSitetitle: PropTypes.string,\r\n};\r\n\r\nexport default Seo;\r\n","import React, { useEffect } from 'react';\r\n\r\n/**\r\n * FontLoadingOptimizer component\r\n * Optimizes font loading by detecting when fonts are loaded and applying appropriate classes\r\n * Prevents FOIT (Flash of Invisible Text) and FOUT (Flash of Unstyled Text)\r\n * Enhanced with better performance monitoring and progressive loading\r\n */\r\nconst FontLoadingOptimizer = () => {\r\n  useEffect(() => {\r\n    // Performance mark for font loading start\r\n    if (typeof performance !== 'undefined' && performance.mark) {\r\n      performance.mark('font-loading-start');\r\n    }\r\n\r\n    // Check if Font Loading API is supported\r\n    if ('fonts' in document) {\r\n      // Add font-loading class initially\r\n      document.documentElement.classList.add('font-loading');\r\n\r\n      // Load critical fonts with optimized strategy\r\n      const loadFonts = async () => {\r\n        try {\r\n          // Load the most critical font weights first (400 is most common)\r\n          await document.fonts.load('400 1em Fredoka');\r\n\r\n          // Mark critical font loaded\r\n          if (typeof performance !== 'undefined' && performance.mark) {\r\n            performance.mark('critical-font-loaded');\r\n          }\r\n\r\n          // Load secondary critical weight (500 for headings)\r\n          await document.fonts.load('500 1em Fredoka');\r\n\r\n          // Remove loading class and add loaded class\r\n          document.documentElement.classList.remove('font-loading');\r\n          document.documentElement.classList.add('font-loaded');\r\n\r\n          // Performance mark for font loading complete\r\n          if (typeof performance !== 'undefined' && performance.mark) {\r\n            performance.mark('font-loading-complete');\r\n            performance.measure('font-loading-duration', 'font-loading-start', 'font-loading-complete');\r\n          }\r\n\r\n          // Preload additional weights in the background with lower priority\r\n          const loadAdditionalFonts = () => {\r\n            Promise.all([\r\n              document.fonts.load('300 1em Fredoka'),\r\n              document.fonts.load('600 1em Fredoka'),\r\n              document.fonts.load('700 1em Fredoka'),\r\n            ]).catch(error => {\r\n              console.warn('Additional font weights failed to load:', error);\r\n            });\r\n          };\r\n\r\n          // Use requestIdleCallback if available, otherwise setTimeout\r\n          if (typeof requestIdleCallback !== 'undefined') {\r\n            requestIdleCallback(loadAdditionalFonts, { timeout: 2000 });\r\n          } else {\r\n            setTimeout(loadAdditionalFonts, 100);\r\n          }\r\n\r\n        } catch (error) {\r\n          console.warn('Font loading failed, using fallbacks:', error);\r\n          // Still remove loading class to show fallback fonts\r\n          document.documentElement.classList.remove('font-loading');\r\n          document.documentElement.classList.add('font-fallback');\r\n\r\n          // Performance mark for fallback\r\n          if (typeof performance !== 'undefined' && performance.mark) {\r\n            performance.mark('font-fallback-activated');\r\n          }\r\n        }\r\n      };\r\n\r\n      loadFonts();\r\n\r\n      // Set a timeout fallback in case font loading takes too long (reduced to 2s for better UX)\r\n      const fallbackTimeout = setTimeout(() => {\r\n        if (document.documentElement.classList.contains('font-loading')) {\r\n          document.documentElement.classList.remove('font-loading');\r\n          document.documentElement.classList.add('font-timeout');\r\n\r\n          // Performance mark for timeout\r\n          if (typeof performance !== 'undefined' && performance.mark) {\r\n            performance.mark('font-loading-timeout');\r\n          }\r\n        }\r\n      }, 2000); // 2 second timeout for better perceived performance\r\n\r\n      return () => {\r\n        clearTimeout(fallbackTimeout);\r\n      };\r\n    } else {\r\n      // Fallback for browsers without Font Loading API\r\n      document.documentElement.classList.add('font-no-api');\r\n\r\n      // Performance mark for no API fallback\r\n      if (typeof performance !== 'undefined' && performance.mark) {\r\n        performance.mark('font-no-api-fallback');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return null; // This component doesn't render anything\r\n};\r\n\r\nexport default FontLoadingOptimizer;\r\n"],"names":["Seo","_ref","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata3","_site$siteMetadata4","_site$siteMetadata5","_ref$description","description","_ref$meta","meta","_ref$Sitetitle","Sitetitle","site","useStaticQuery","metaDescription","siteMetadata","siteTitle","title","siteUrl","imageSEO","image","author","fullTitle","concat","defaultMeta","React","name","content","property","filter","tag","allMeta","userMeta","Array","isArray","_toConsumableArray","_jsxs","_Fragment","children","_jsx","lang","map","index","key","propTypes","PropTypes","isRequired","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","useEffect","performance","document","documentElement","classList","add","loadFonts","_callee","loadAdditionalFonts","_t","_context","fonts","load","remove","measure","all","error","console","warn","requestIdleCallback","timeout","setTimeout","arguments","apply","_next","_throw","fallbackTimeout","contains","clearTimeout"],"sourceRoot":""}